[]

module LIST

  sort List{S} []

  symbol nil{S}() : List{S} []

  symbol cons{S}(S,List{S}) : List{S} []

  symbol append{S}(List{S},List{S}) : List{S} []

  axiom{S,R}
    \exists{R}(
      T:List{S},
      \equals{List{S},R}(
        T:List{S},
        nil{S}())) []

  axiom{S,R}
    \exists{R}(
      T:List{S},
      \equals{List{S},R}(
        T:List{S},
        cons{S}(X:S,L:List{S}))) []

  axiom{S,R}
    \exists{R}(
      T:List{S},
      \equals{List{S},R}(
        T:List{S},
        append{S}(L1:List{S},L2:List{S}))) []

  axiom{S}
    \or{List{S}}(
      nil{S}(),
      \exists{List{S}}(
        X:S,
        \exists{List{S}}(
          L:List{S},
          cons{S}(X:S,L:List{S})))) []

  axiom{S}
    \not{List{S}}(
      \and{List{S}}(
        nil{S}(),
        \exists{List{S}}(
          X:S,
          \exists{List{S}}(
            L:List{S},
            cons{S}(X:S,L:List{S}))))) []

  axiom{S,R}
    \equals{List{S},R}(
      append{S}(nil{S}(),L:List{S}),
      L:List{S}) []

  axiom{S,R}
    \equals{List{S},R}(
      append{S}(cons{S}(X:S,L0:List{S}),L:List{S}),
      cons{S}(X:S,append{S}(L0:List{S},L:List{S}))) []

endmodule []
