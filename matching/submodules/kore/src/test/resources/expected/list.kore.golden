Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "LIST"
            , moduleSentences =
                [ ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = (Id "List" AstLocationNone) :: Id Object
                    , sentenceSortParameters =
                        [ SortVariable ((Id "S" AstLocationNone) :: Id Object)
                        ]
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id "nil" AstLocationNone) :: Id Object
                            , symbolParams =
                                [ SortVariable ((Id "S" AstLocationNone) :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts = []
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id "cons" AstLocationNone) :: Id Object
                            , symbolParams =
                                [ SortVariable ((Id "S" AstLocationNone) :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                        , SortActualSort SortActual
                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                ]
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id "append" AstLocationNone) :: Id Object
                            , symbolParams =
                                [ SortVariable ((Id "S" AstLocationNone) :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                ]
                            }
                        , SortActualSort SortActual
                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                ]
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                            , sortActualSorts =
                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                ]
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                        , UnifiedObject (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ExistsPattern Exists
                            { existsSort =
                                SortVariableSort (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                            , existsVariable =
                                Variable
                                    { variableName = (Id "T" AstLocationNone) :: Id Object
                                    , variableSort =
                                        SortActualSort SortActual
                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                            , sortActualSorts =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    }
                            , existsChild =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                                    { equalsOperandSort =
                                        SortActualSort SortActual
                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                            , sortActualSorts =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    , equalsResultSort =
                                        SortVariableSort (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                                    , equalsFirst =
                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = (Id "T" AstLocationNone) :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                    , sortActualSorts =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            }))))
                                    , equalsSecond =
                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id "nil" AstLocationNone) :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            , applicationChildren = []
                                            }))))
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                        , UnifiedObject (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ExistsPattern Exists
                            { existsSort =
                                SortVariableSort (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                            , existsVariable =
                                Variable
                                    { variableName = (Id "T" AstLocationNone) :: Id Object
                                    , variableSort =
                                        SortActualSort SortActual
                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                            , sortActualSorts =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    }
                            , existsChild =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                                    { equalsOperandSort =
                                        SortActualSort SortActual
                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                            , sortActualSorts =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    , equalsResultSort =
                                        SortVariableSort (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                                    , equalsFirst =
                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = (Id "T" AstLocationNone) :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                    , sortActualSorts =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            }))))
                                    , equalsSecond =
                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id "cons" AstLocationNone) :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = (Id "X" AstLocationNone) :: Id Object
                                                    , variableSort =
                                                        SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                    }))))
                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = (Id "L" AstLocationNone) :: Id Object
                                                    , variableSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                            , sortActualSorts =
                                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                ]
                                                            }
                                                    }))))
                                                ]
                                            }))))
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                        , UnifiedObject (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ExistsPattern Exists
                            { existsSort =
                                SortVariableSort (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                            , existsVariable =
                                Variable
                                    { variableName = (Id "T" AstLocationNone) :: Id Object
                                    , variableSort =
                                        SortActualSort SortActual
                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                            , sortActualSorts =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    }
                            , existsChild =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                                    { equalsOperandSort =
                                        SortActualSort SortActual
                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                            , sortActualSorts =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    , equalsResultSort =
                                        SortVariableSort (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                                    , equalsFirst =
                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = (Id "T" AstLocationNone) :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                    , sortActualSorts =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            }))))
                                    , equalsSecond =
                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id "append" AstLocationNone) :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = (Id "L1" AstLocationNone) :: Id Object
                                                    , variableSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                            , sortActualSorts =
                                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                ]
                                                            }
                                                    }))))
                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = (Id "L2" AstLocationNone) :: Id Object
                                                    , variableSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                            , sortActualSorts =
                                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                ]
                                                            }
                                                    }))))
                                                ]
                                            }))))
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (OrPattern Or
                            { orSort =
                                SortActualSort SortActual
                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                    , sortActualSorts =
                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                        ]
                                    }
                            , orFirst =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = (Id "nil" AstLocationNone) :: Id Object
                                            , symbolOrAliasParams =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    , applicationChildren = []
                                    }))))
                            , orSecond =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ExistsPattern Exists
                                    { existsSort =
                                        SortActualSort SortActual
                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                            , sortActualSorts =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    , existsVariable =
                                        Variable
                                            { variableName = (Id "X" AstLocationNone) :: Id Object
                                            , variableSort =
                                                SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                            }
                                    , existsChild =
                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ExistsPattern Exists
                                            { existsSort =
                                                SortActualSort SortActual
                                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                    , sortActualSorts =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            , existsVariable =
                                                Variable
                                                    { variableName = (Id "L" AstLocationNone) :: Id Object
                                                    , variableSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                            , sortActualSorts =
                                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                ]
                                                            }
                                                    }
                                            , existsChild =
                                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                    { applicationSymbolOrAlias =
                                                        SymbolOrAlias
                                                            { symbolOrAliasConstructor = (Id "cons" AstLocationNone) :: Id Object
                                                            , symbolOrAliasParams =
                                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                ]
                                                            }
                                                    , applicationChildren =
                                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = (Id "X" AstLocationNone) :: Id Object
                                                            , variableSort =
                                                                SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                            }))))
                                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                            { variableName = (Id "L" AstLocationNone) :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                                    , sortActualSorts =
                                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                        ]
                                                                    }
                                                            }))))
                                                        ]
                                                    }))))
                                            }))))
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (NotPattern Not
                            { notSort =
                                SortActualSort SortActual
                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                    , sortActualSorts =
                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                        ]
                                    }
                            , notChild =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (AndPattern And
                                    { andSort =
                                        SortActualSort SortActual
                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                            , sortActualSorts =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    , andFirst =
                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id "nil" AstLocationNone) :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            , applicationChildren = []
                                            }))))
                                    , andSecond =
                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ExistsPattern Exists
                                            { existsSort =
                                                SortActualSort SortActual
                                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                    , sortActualSorts =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            , existsVariable =
                                                Variable
                                                    { variableName = (Id "X" AstLocationNone) :: Id Object
                                                    , variableSort =
                                                        SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                    }
                                            , existsChild =
                                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ExistsPattern Exists
                                                    { existsSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                            , sortActualSorts =
                                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                ]
                                                            }
                                                    , existsVariable =
                                                        Variable
                                                            { variableName = (Id "L" AstLocationNone) :: Id Object
                                                            , variableSort =
                                                                SortActualSort SortActual
                                                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                                    , sortActualSorts =
                                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                        ]
                                                                    }
                                                            }
                                                    , existsChild =
                                                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                                            { applicationSymbolOrAlias =
                                                                SymbolOrAlias
                                                                    { symbolOrAliasConstructor = (Id "cons" AstLocationNone) :: Id Object
                                                                    , symbolOrAliasParams =
                                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                        ]
                                                                    }
                                                            , applicationChildren =
                                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                    { variableName = (Id "X" AstLocationNone) :: Id Object
                                                                    , variableSort =
                                                                        SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                    }))))
                                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                                    { variableName = (Id "L" AstLocationNone) :: Id Object
                                                                    , variableSort =
                                                                        SortActualSort SortActual
                                                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                                            , sortActualSorts =
                                                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                                ]
                                                                            }
                                                                    }))))
                                                                ]
                                                            }))))
                                                    }))))
                                            }))))
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                        , UnifiedObject (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                            { equalsOperandSort =
                                SortActualSort SortActual
                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                    , sortActualSorts =
                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                        ]
                                    }
                            , equalsResultSort =
                                SortVariableSort (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                            , equalsFirst =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = (Id "append" AstLocationNone) :: Id Object
                                            , symbolOrAliasParams =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id "nil" AstLocationNone) :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            , applicationChildren = []
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = (Id "L" AstLocationNone) :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                    , sortActualSorts =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            }))))
                                        ]
                                    }))))
                            , equalsSecond =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                    { variableName = (Id "L" AstLocationNone) :: Id Object
                                    , variableSort =
                                        SortActualSort SortActual
                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                            , sortActualSorts =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                        , UnifiedObject (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        Fix (UnifiedPattern (UnifiedObject (Rotate31 (EqualsPattern Equals
                            { equalsOperandSort =
                                SortActualSort SortActual
                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                    , sortActualSorts =
                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                        ]
                                    }
                            , equalsResultSort =
                                SortVariableSort (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                            , equalsFirst =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = (Id "append" AstLocationNone) :: Id Object
                                            , symbolOrAliasParams =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id "cons" AstLocationNone) :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = (Id "X" AstLocationNone) :: Id Object
                                                    , variableSort =
                                                        SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                    }))))
                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = (Id "L0" AstLocationNone) :: Id Object
                                                    , variableSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                            , sortActualSorts =
                                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                ]
                                                            }
                                                    }))))
                                                ]
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = (Id "L" AstLocationNone) :: Id Object
                                            , variableSort =
                                                SortActualSort SortActual
                                                    { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                    , sortActualSorts =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            }))))
                                        ]
                                    }))))
                            , equalsSecond =
                                Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                    { applicationSymbolOrAlias =
                                        SymbolOrAlias
                                            { symbolOrAliasConstructor = (Id "cons" AstLocationNone) :: Id Object
                                            , symbolOrAliasParams =
                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                ]
                                            }
                                    , applicationChildren =
                                        [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                            { variableName = (Id "X" AstLocationNone) :: Id Object
                                            , variableSort =
                                                SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                            }))))
                                        , Fix (UnifiedPattern (UnifiedObject (Rotate31 (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id "append" AstLocationNone) :: Id Object
                                                    , symbolOrAliasParams =
                                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        ]
                                                    }
                                            , applicationChildren =
                                                [ Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = (Id "L0" AstLocationNone) :: Id Object
                                                    , variableSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                            , sortActualSorts =
                                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                ]
                                                            }
                                                    }))))
                                                , Fix (UnifiedPattern (UnifiedObject (Rotate31 (VariablePattern Variable
                                                    { variableName = (Id "L" AstLocationNone) :: Id Object
                                                    , variableSort =
                                                        SortActualSort SortActual
                                                            { sortActualName = (Id "List" AstLocationNone) :: Id Object
                                                            , sortActualSorts =
                                                                [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                ]
                                                            }
                                                    }))))
                                                ]
                                            }))))
                                        ]
                                    }))))
                            }))))
                    , sentenceAxiomAttributes = Attributes []
                    })
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }